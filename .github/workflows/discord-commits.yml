name: Discord Commit Notifications

on:
  push:
    branches:
      - development
      - master

jobs:
  discord:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build commit message
        id: commits
        run: |
          # Haal alle commits op die geen merge zijn
          commits=$(jq -c '.commits[] | select(.message | test("Merge pull request") | not)' $GITHUB_EVENT_PATH)

          embeds="[]"

          if [ -n "$commits" ]; then
            embeds="["
            first=true
            for c in $commits; do
              title=$(echo "$c" | jq -r '.message')
              url=$(echo "$c" | jq -r '.url')
              author_name=$(echo "$c" | jq -r '.author.name')
              author_username=$(echo "$c" | jq -r '.author.username')

              embed=$(jq -n \
                --arg title "$title" \
                --arg desc "$title" \
                --arg url "$url" \
                --arg name "$author_name" \
                --arg icon "https://github.com/$author_username.png" \
                '{title:$title, description:$desc, url:$url, author:{name:$name, icon_url:$icon}}')

              if [ "$first" = true ]; then
                embeds="$embed"
                first=false
              else
                embeds="$embeds,$embed"
              fi
            done
            embeds="[$embeds]"
          fi

          # Encode als base64 om veilig naar GITHUB_OUTPUT te sturen
          echo "commits_json=$(echo "$embeds" | base64)" >> $GITHUB_OUTPUT

      - name: Discord Commits
        uses: Sniddl/discord-commits@v1.6
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          template: "custom"
          include-extras: true
          embed: ${{ steps.commits.outputs.commits_json }}
